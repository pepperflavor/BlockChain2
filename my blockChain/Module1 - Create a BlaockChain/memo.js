/*  
    flask 설치
    아나콘다 베이스로 열려서 python 명령어로 설치해야함
    =====================================================
     pip install Flask==0.12.2
    =====================================================


    postman 설치


    def 가 클래스내 함수선언을 뜻하는 것같다
    그다음 인수로 뭘받을지 쓰고 : 를 써주면된다.


    .encode() sha코드가 이 연산을 수행하도록 한다

    .hexdigest() : 16진수 숫자만을 포함하는 이중크기 문자열을 생성하도록 해줌


    *** hash 함수부분 설명 
    데모에서 설계한 블록의 구조
     - 블록든 4개의 키인 인덱스, 타임스탬프, 증명, 이전 해시를 가진 딕셔너리 형태이다.

    json 라이브러리로 부터 객체를 가져와 문자열을 생성하는 dump 함수를 만들어서 이용한다.

    dumps() 함수: Python 객체를 JSON 문자열로 변환

    그렇다면 왜 직접 문자열로 바꾸지 않고 dumps를 통해서 문자열로 변환하는 것일까?
     => 블록 딕셔너리를 json형태로 저장할 것이기 때문이다.

    json 참조
        JSON은 JavaScript Object Notation의 약자로서 데이터를 문자열의 형태로 나타내기 위해서 사용되는데요. 
        이름이 암시하듯 JSON은 원래 자바스크립트에서 파생되었지만 현재는 프로그래밍 언어와 무관하게 거의 표준으로 자리잡아 
        특히 이종의 시스템 간에 원격으로 데이터를 주고 받을 때 많이 사용되고 있습니다.

    ** vaild 함수 설명
        블록체인의 유효성을 확인하는 함수 - 1. 블록의 이전해시와 이전블록의 해시값과 일치하는지
                                          2. 작업증명 함수로 정의한 작업증염 문제에 따라 각 블록의 증명이 유효한지 확인한다.
        
        previous_block
        유효성을 확인할 해당 체인의 첫번째 블록인 이전블록 변수를 해당 체인에 대한 인덱스 0으로 초기화한다.
        while 문이 끝날때 해당 이전블록 변수의 값을 신규블록과 동일하도록 업데이트 해준다



getting the full Blockchain

    get요청을 보낼때 표시되는 것 
    json형태의 응답은 json 형태로 전체 블록체인을 포함한다




    POSTMan으로 서버 요청 응답 확인해보기
    GET인지 POST인지 고르고
    요청서버는 
    flask 기본 서버인 http://127.0.0.1:5000/ + 내가 정한 요청명(get_chain)
*/

